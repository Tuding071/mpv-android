name: Build mpv-android app (with deps + libs)

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Set up NDK r26d
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r26d

      - name: Export NDK path
        run: echo "ANDROID_NDK_ROOT=$ANDROID_NDK_HOME" >> $GITHUB_ENV

      - name: Install Meson build system
        run: |
          pip install meson==1.9.1
          echo "‚úÖ Environment ready"

      - name: Clone upstream include folder
        run: |
          git clone --depth 1 https://github.com/mpv-android/mpv-android.git upstream
          mkdir -p buildscripts/include
          cp -r upstream/buildscripts/include/* buildscripts/include/
          echo "‚úÖ Copied include folder"

      - name: Fetch dependencies
        run: |
          mkdir -p buildscripts/deps
          cd buildscripts/deps
          echo "üì¶ Cloning dependencies..."
          for dep in mpv ffmpeg libass lua libplacebo mbedtls dav1d; do
            if [ ! -d "$dep" ]; then
              echo "üì¶ Cloning $dep ..."
              case $dep in
                mpv) git clone --depth 1 https://github.com/mpv-player/mpv.git ;;
                ffmpeg) git clone --depth 1 https://github.com/FFmpeg/FFmpeg.git ffmpeg ;;
                libass) git clone --depth 1 https://github.com/libass/libass.git ;;
                lua) git clone --depth 1 https://github.com/lua/lua.git ;;
                libplacebo) git clone --depth 1 https://code.videolan.org/videolan/libplacebo.git ;;
                mbedtls) git clone --depth 1 https://github.com/Mbed-TLS/mbedtls.git ;;
                dav1d) git clone --depth 1 https://code.videolan.org/videolan/dav1d.git ;;
              esac
            fi
          done
          echo "‚úÖ All deps ready"

      - name: Grant Gradle permission
        run: chmod +x gradlew

      - name: Build native libraries (arm64)
        run: |
          cd buildscripts
          chmod +x buildall.sh
          echo "üèóÔ∏è Building libmpv for arm64..."
          ./buildall.sh --arch arm64 mpv-android || exit 1
          echo "‚úÖ Native libs built"

      - name: Build APK
        run: |
          ./gradlew assembleDebug --stacktrace --warning-mode all
          echo "‚úÖ APK build complete"

      - name: Verify APK structure
        run: |
          echo "üîç Listing built APKs..."
          ls -R app/build/outputs/apk/ || true

      - name: Package all APKs
        run: |
          zip -r mpv-apks.zip app/build/outputs/apk
          echo "‚úÖ APKs packaged into zip"

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: mpv-android-full-build
          path: mpv-apks.zip
