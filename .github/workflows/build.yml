name: Build mpv-android (arm64-v8a)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout your repo
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y python3-pip ninja-build pkg-config libssl-dev git curl unzip zip
        pip install meson==1.9.1
        echo "âœ… Environment ready"

    - name: Setup Android NDK
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r26d
    - run: echo "ANDROID_NDK_ROOT=${ANDROID_NDK_HOME}" >> $GITHUB_ENV

    # --- fetch include files from original mpv-android ---
    - name: Fetch include files from original mpv-android
      run: |
        git clone --depth 1 https://github.com/mpv-android/mpv-android.git upstream
        mkdir -p buildscripts/include
        cp -r upstream/buildscripts/include/* buildscripts/include/
        echo "âœ… Copied include folder"
        rm -rf upstream

    # --- fetch dependencies correctly (lowercase names) ---
    - name: Fetch dependencies
      run: |
        mkdir -p buildscripts/deps
        cd buildscripts/deps
        for dep in mpv ffmpeg libass lua libplacebo; do
          if [ ! -d "$dep" ]; then
            echo "ðŸ“¦ Cloning $dep ..."
            case $dep in
              mpv) git clone --depth 1 https://github.com/mpv-player/mpv.git ;;
              ffmpeg) git clone --depth 1 https://github.com/FFmpeg/FFmpeg.git ffmpeg ;;
              libass) git clone --depth 1 https://github.com/libass/libass.git ;;
              lua) git clone --depth 1 https://github.com/lua/lua.git ;;
              libplacebo) git clone --depth 1 https://code.videolan.org/videolan/libplacebo.git ;;
            esac
          fi
        done
        echo "âœ… All deps ready"

    # --- build libmpv ---
    - name: Build libmpv for arm64
      run: |
        cd buildscripts
        chmod +x buildall.sh
        ./buildall.sh --arch arm64 mpv
        echo "âœ… Finished building libmpv"

    # --- build Android APK ---
    - name: Build Android APK
      run: |
        ./gradlew assembleDebug
        echo "âœ… APK built"

    # --- zip outputs for easy download ---
    - name: Zip all APKs
      run: |
        zip -r $GITHUB_WORKSPACE/mpv-apks.zip app/build/outputs/apk/
        ls -R app/build/outputs/apk/
        echo "âœ… APKs zipped"

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: mpv-android-apks
        path: mpv-apks.zip
