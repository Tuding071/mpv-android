name: Build mpv-android

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libjsoncpp25 librhash0 cmake-data cmake gettext \
          ninja-build meson nasm yasm unzip wget git

    - name: Set up Android NDK
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r26d
        add-to-path: true

    - name: Prepare buildscripts
      run: |
        WORKSPACE="${GITHUB_WORKSPACE}"
        DEPS_DIR="$WORKSPACE/buildscripts/deps"
        INCLUDE_DIR="$WORKSPACE/buildscripts/include"
        BUILD_DIR="$WORKSPACE/buildscripts"

        mkdir -p "$DEPS_DIR"
        git clone --depth 1 https://github.com/mpv-android/mpv-android.git upstream
        cp -r upstream/buildscripts/include/* "$INCLUDE_DIR"

    - name: Clone dependencies
      run: |
        DEPS_DIR="$GITHUB_WORKSPACE/buildscripts/deps"
        cd "$DEPS_DIR"
        git clone --depth 1 https://github.com/mpv-android/mpv-android.git mpv
        git clone --depth 1 https://github.com/mpv-android/FFmpeg ffmpeg
        git clone --depth 1 https://github.com/libass/libass libass
        git clone --depth 1 https://github.com/lua/lua lua
        git clone --depth 1 https://github.com/haasn/mbedtls mbedtls
        git clone --depth 1 https://code.videolan.org/videolan/dav1d.git dav1d
        git clone --depth 1 https://github.com/Plagman/libplacebo.git libplacebo

    - name: Make scripts executable
      run: |
        BUILD_DIR="$GITHUB_WORKSPACE/buildscripts"
        chmod +x "$BUILD_DIR/buildall.sh"
        chmod +x "$BUILD_DIR/include/*.sh"
        chmod +x "$BUILD_DIR/scripts/*.sh"

    - name: Build all architectures
      run: |
        BUILD_DIR="$GITHUB_WORKSPACE/buildscripts"
        cd "$BUILD_DIR"

        ARCHS=("arm64" "armv7l" "x86" "x86_64")
        for ARCH in "${ARCHS[@]}"; do
          echo "Building for $ARCH..."
          ./buildall.sh --arch "$ARCH" mpv
        done

    - name: Collect APKs
      run: |
        mkdir -p "$GITHUB_WORKSPACE/artifacts"
        find "$GITHUB_WORKSPACE/app/build/outputs/apk" -name "*.apk" -exec cp {} "$GITHUB_WORKSPACE/artifacts/" \;

    - name: Upload APK artifacts
      uses: actions/upload-artifact@v4
      with:
        name: mpv-apks
        path: artifacts/*.apk

    - name: Zip all APKs
      run: |
        cd "$GITHUB_WORKSPACE/artifacts"
        zip -r mpv-all-arch.zip *.apk

    - name: Upload zipped APKs
      uses: actions/upload-artifact@v4
      with:
        name: mpv-all-arch-zip
        path: artifacts/mpv-all-arch.zip
